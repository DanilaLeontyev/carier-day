{"version":3,"sources":["component/Greetings.tsx","component/Algorithm.tsx","component/EmailForm.tsx","component/Analitic.tsx","component/YouWant.tsx","component/Leave.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/list.png","assets/logo.svg","assets/boy.png","component/Testing.tsx","assets/chain.png","assets/lamp.png","assets/crown.png"],"names":["Greetings","react_default","a","createElement","className","src","boyPic","alt","width","Component","data","id","content","Algorithm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDragEnd","result","destination","items","reorder","state","source","index","setState","list","startIndex","endIndex","_result$splice","splice","removed","slicedToArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","_this2","react_beautiful_dnd_esm","droppableId","provided","snapshot","ref","innerRef","map","item","key","draggableId","assign","draggableProps","dragHandleProps","placeholder","EmailForm","react","listPic","htmlFor","type","required","Analitic","chooseName","value","e","choosenName","chooseProf","choosenProf","chain","onClick","YouWant","target","textContent","profButtons","getAllButton","i","classList","contains","remove","document","getElementsByClassName","lamp","Leave","position","href","crown","App","nextPage","questionNumber","prevPage","mainPage","src_component_Greetings","src_component_EmailForm","src_component_Algorithm","Testing","src_component_Analitic","src_component_YouWant","src_component_Leave","footerPage","Fragment","logo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p","C_Users_danil_p_carier_day_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_danil_p_carier_day_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_danil_p_carier_day_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","checkEnd","values","newValues","slice","calculateResult","expression","replace","console","log","eval","_unused","addToExpression","HTMLButtonElement","concat","clearExpression","react__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"+UAqBeA,mLAfX,OACEC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAQC,IAAI,MAAMC,MAAM,QAClCP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,gGACoBH,EAAAC,EAAAC,cAAA,WADpB,2yCALgBM,mCCyBxB,IAAMC,EAAO,CACX,CACEC,GAAI,IACJC,QAAS,yCAEX,CACED,GAAI,IACJC,QAAO,sCAET,CACED,GAAI,IACJC,QAAS,yBAEX,CACED,GAAI,IACJC,QAAS,4BAEX,CACED,GAAI,IACJC,QAAS,iBAEX,CACED,GAAI,IACJC,QAAS,iCAEX,CACED,GAAI,IACJC,QAAS,sBAEX,CACED,GAAI,IACJC,QAAS,gCAEX,CACED,GAAI,IACJC,QAAS,mCAEX,CACED,GAAI,KACJC,QAAS,cA0EEC,cArEb,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACtBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMRQ,UAAY,SAACC,GACX,GAAKA,EAAOC,YAAZ,CAIA,IAAMC,EAAQV,EAAKW,QACjBX,EAAKY,MAAMF,MACXF,EAAOK,OAAOC,MACdN,EAAOC,YAAYK,OAGrBd,EAAKe,SAAS,CACZL,YAnBoBV,EAuBxBW,QAAU,SACRK,EACAC,EACAC,GAEA,IAAMV,EAAqBQ,EADZG,EAEGX,EAAOY,OAAOH,EAAY,GAArCI,EAFQpB,OAAAqB,EAAA,EAAArB,CAAAkB,EAAA,MAIf,OADAX,EAAOY,OAAOF,EAAU,EAAGG,GACpBb,GA7BPR,EAAKY,MAAQ,CACXF,MA/DN,SAAiBa,GAKf,IAJA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAIlB,IAAMD,GACXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,EAkDIQ,CAAQpC,IAHKK,wEAkCf,IAAAgC,EAAA7B,KACP,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,8YAIAH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAiB1B,UAAWJ,KAAKI,WAC/BrB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAWC,YAAY,aACpB,SAACC,EAAUC,GAAX,OACClD,EAAAC,EAAAC,cAAA,OAAKiD,IAAKF,EAASG,SAAUjD,UAAU,uBACpC2C,EAAKpB,MAAMF,MAAM6B,IAAI,SAACC,EAAM1B,GAAP,OACpB5B,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAWQ,IAAKD,EAAK5C,GAAI8C,YAAaF,EAAK5C,GAAIkB,MAAOA,GACnD,SAACqB,EAAUC,GAAX,OACClD,EAAAC,EAAAC,cAAA,MAAAa,OAAA0C,OAAA,CACEN,IAAKF,EAASG,UACVH,EAASS,eACTT,EAASU,gBAHf,CAIExD,UAAU,wBAETmD,EAAK3C,aAKbsC,EAASW,wBA5DFpD,uCCzCTqD,mLAxBX,OACEC,EAAA,qBAAK3D,UAAU,aACb2D,EAAA,qBAAK3D,UAAU,iBAAiBC,IAAK2D,IAASzD,IAAI,SAElDwD,EAAA,oMACgCA,EAAA,0BAGhCA,EAAA,qBAAK3D,UAAU,wBACb2D,EAAA,sBAAM3D,UAAU,mBACd2D,EAAA,uBAAOE,QAAQ,OAAf,uBACAF,EAAA,uBAAOpD,GAAG,MAAMuD,KAAK,SACrBH,EAAA,uBAAOE,QAAQ,SAAf,cACAF,EAAA,uBAAOpD,GAAG,QAAQuD,KAAK,QAAQC,UAAU,IACzCJ,EAAA,uBAAOE,QAAQ,OAAf,+CACAF,EAAA,uBAAOpD,GAAG,MAAMuD,KAAK,SAEvBH,EAAA,qBAAK3D,UAAU,4BAA4BC,IAAK2D,IAASzD,IAAI,kBAnB/CE,sCCoHT2D,sBA9Gb,SAAAA,EAAYtD,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACtBrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAORuD,WAAa,SAACC,GAAD,OAAmB,SAACC,GAC/BxD,EAAKe,SAAS,CACZ0C,YAAaF,MAVOvD,EAcxB0D,WAAa,SAACH,GAAD,OAAmB,SAACC,GAC/BxD,EAAKe,SAAS,CACZ4C,YAAaJ,MAdfvD,EAAKY,MAAQ,CACX6C,YAAa,GACbE,YAAa,IAJO3D,wEAqBtB,OACEgD,EAAA,qBAAK3D,UAAU,YACb2D,EAAA,qBAAK3D,UAAU,kBACb2D,EAAA,qBAAK1D,IAAKsE,IAAOpE,IAAI,QAAQH,UAAU,kBACvC2D,EAAA,mBAAG3D,UAAU,kBAAb,8kBAEoD2D,EAAA,yBAFpD,ynBAIyDA,EAAA,yBAJzD,6LAK2CA,EAAA,yBAL3C,iOAMiDA,EAAA,yBANjD,mMAO4CA,EAAA,yBAP5C,6MAYFA,EAAA,qBAAK3D,UAAU,wCACb2D,EAAA,qBAAK3D,UAAU,kCACb2D,EAAA,qBAAK3D,UAAU,iBAAf,uBACA2D,EAAA,qBAAK3D,UAAU,iBAAf,4DAGF2D,EAAA,qBAAK3D,UAAU,2BACb2D,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKmD,WAAW,yCAApD,wCAGAN,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKuD,WAAW,6BAApD,6BAKFV,EAAA,qBAAK3D,UAAU,2BACb2D,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKmD,WAAW,mCAApD,kCAGAN,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKuD,WAAW,qDAApD,qDAKFV,EAAA,qBAAK3D,UAAU,2BACb2D,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKmD,WAAW,6BAApD,4BAGAN,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKuD,WAAW,2DAApD,4DAMJV,EAAA,qBAAK3D,UAAU,6BACb2D,EAAA,qBAAK3D,UAAU,iBAAf,uBAEA2D,EAAA,qBAAK3D,UAAU,wBACb2D,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKmD,WAAW,yCAApD,wCAGAN,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKmD,WAAW,mCAApD,kCAGAN,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKmD,WAAW,6BAApD,6BAKFN,EAAA,qBAAK3D,UAAU,iBAAf,2DACA2D,EAAA,qBAAK3D,UAAU,wBACb2D,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKuD,WAAW,6BAApD,4BAIAV,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKuD,WAAW,qDAApD,oDAIAV,EAAA,wBAAQ3D,UAAU,SAASwE,QAAS1D,KAAKuD,WAAW,2DAApD,4DAMJV,EAAA,qBAAK3D,UAAU,oBAAf,sDACcc,KAAKS,MAAM6C,YADzB,IACuCtD,KAAKS,MAAM+C,qBAxGnCjE,wCCsDRoE,cAxDb,SAAAA,EAAY/D,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACtB9D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KAAMJ,KAMR2D,WAAa,SAACF,GAGZ,IAFA,IAAMG,EAAcH,EAAEO,OAAOC,YACvBC,EAAcjE,EAAKkE,eAChBC,EAAI,EAAGA,EAAIF,EAAYtC,OAAQwC,IAClCF,EAAYE,GAAGC,UAAUC,SAAS,qBACpCJ,EAAYE,GAAGC,UAAUE,OAAO,oBAGpCd,EAAEO,OAAO1E,WAAa,oBACtBW,EAAKe,SAAS,CACZ4C,YAAaA,KAjBO3D,EAqBxBkE,aAAe,WAEb,OAD8BK,SAASC,uBAAuB,eApB9DxE,EAAKY,MAAQ,CACX+C,YAAa,IAHO3D,wEA2BtB,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,2GACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBwE,QAAS1D,KAAKuD,YAApD,oDAGAxE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBwE,QAAS1D,KAAKuD,YAApD,uEAKFxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,IAAKmF,IAAMjF,IAAI,SAE7CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBwE,QAAS1D,KAAKuD,YAApD,sEAGAxE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBwE,QAAS1D,KAAKuD,YAApD,0EA/CUhE,uCCyBPgF,cAtBb,SAAAA,EAAY3E,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACtB1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,KAAMJ,KACDa,MAAQ,CACX+D,SAAU,oDAHU3E,wEAQtB,OACEgD,EAAA,qBAAK3D,UAAU,SACb2D,EAAA,8UAC6D,IAC1D7C,KAAKS,MAAM+D,SAFd,IAEwB3B,EAAA,yBAFxB,yJAGiC,IAC/BA,EAAA,mBAAG4B,KAAK,8BAAR,wBAEF5B,EAAA,qBAAK3D,UAAU,aAAaC,IAAKuF,IAAOrF,IAAI,kBAjBhCE,aCsKLoF,cA9Jb,SAAAA,EAAY/E,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2E,IACtB9E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6E,GAAAxE,KAAAH,KAAMJ,KAMDgF,SAAW,SAACvB,GACbxD,EAAKY,MAAMoE,eAAiB,GAC9BhF,EAAKe,SAAS,SAAAH,GACZ,MAAO,CACLoE,eAAgBpE,EAAMoE,eAAiB,MAXvBhF,EAiBjBiF,SAAW,SAACzB,GACbxD,EAAKY,MAAMoE,eAAiB,GAC9BhF,EAAKe,SAAS,SAAAH,GACZ,MAAO,CACLoE,eAAgBpE,EAAMoE,eAAiB,MArBvBhF,EA2BjBkF,SAAW,WAChB,OAAQlF,EAAKY,MAAMoE,gBACjB,KAAK,EACH,OAAO9F,EAAAC,EAAAC,cAAC+F,EAAD,MAGT,KAAK,EACH,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAGT,KAAK,EACH,OAAOlG,EAAAC,EAAAC,cAACiG,EAAD,MAGT,KAAK,EACH,OAAOnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,MAGT,KAAK,EACH,OAAOpG,EAAAC,EAAAC,cAACmG,EAAD,MAGT,KAAK,EACH,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAGT,KAAK,EACH,OAAOtG,EAAAC,EAAAC,cAACqG,EAAD,MAGT,QACE,OAAOvG,EAAAC,EAAAC,cAAA,uBA1DWY,EA+DjB0F,WAAa,WAClB,OAAQ1F,EAAKY,MAAMoE,gBACjB,KAAK,EACH,OACE9F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASwE,QAAS7D,EAAK+E,UAAzC,iHAKJ,KAAK,EAYL,KAAK,EAYL,KAAK,EAaL,KAAK,EAaL,KAAK,EACH,OACE7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASwE,QAAS7D,EAAKiF,UAAzC,kCAGA/F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASwE,QAAS7D,EAAK+E,UAAzC,mCAON,KAAK,EACH,OAAO7F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwG,SAAA,MAGT,QACE,OAAOzG,EAAAC,EAAAC,cAAA,uBA1IXY,EAAKY,MAAQ,CACXoE,eAAgB,GAHIhF,wEAkJtB,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,IAAKsG,OAExC1G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWc,KAAK+E,YAChChG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAac,KAAKuF,sBAzJ1BhG,aCJEmG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjH,EAAAC,EAAAC,cAACgH,EAAD,MAAS7B,SAAS8B,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCE3InBC,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,ioCCSlCzB,6BACJ,SAAAA,QAAYvF,OAAY,IAAAC,MAAA,OAAAC,OAAA+G,qHAAA,EAAA/G,CAAAE,KAAAmF,SACtBtF,MAAAC,OAAAgH,gIAAA,EAAAhH,CAAAE,KAAAF,OAAAiH,qHAAA,EAAAjH,CAAAqF,SAAAhF,KAAAH,KAAMJ,QADgBC,MAQxBmH,SAAW,SAACC,GACV,IAAIC,EAUJ,MARgC,MAA9BD,EAAOA,EAAOzF,OAAS,IACO,MAA9ByF,EAAOA,EAAOzF,OAAS,IAEvByF,EAASA,EAAOE,MAAM,GAAI,GAC1BtH,MAAKmH,SAASC,IAEdC,EAAYD,EAEPC,GAAwB,KAnBTrH,MAsBxBuH,gBAAkB,WAChB,IAAI/G,OAAiB,EACjB4G,OAASpH,MAAKY,MAAM4G,WACrBC,QAAQ,iBAAiB,IACzBA,QAAQ,SAAU,KAClBA,QAAQ,UAAW,KACnBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAEnBL,OAASpH,MAAKmH,SAASC,QACvBM,QAAQC,IAAIP,QACZ,IACE5G,OAASoH,KAAKR,QACd,MAAAS,SAIA,YAHA7H,MAAKe,SAAS,CACZP,OAAQ,QAIZR,MAAKe,SAAS,CACZP,OAAQA,UA1CYR,MA8CxB8H,gBAAkB,SAACvE,GAAD,OAAmB,SACnCC,GAEMA,EAAEO,kBAAkBgE,mBAItB/H,MAAKY,MAAM4G,WAAW7F,QAAU,IAClC3B,MAAKe,SAAS,SAAAH,GACZ,MAAO,CACL4G,WAAY5G,EAAM4G,WAAWQ,OAAOzE,QAxDpBvD,MA8DxBiI,gBAAkB,WAChBjI,MAAKe,SAAS,CACZyG,WAAY,GACZhH,OAAQ,KA/DVR,MAAKY,MAAQ,CACX4G,WAAY,GACZhH,OAAQ,GAJYR,8TAsEtB,OACEkI,mCAAA,qBAAK7I,UAAU,WACb6I,mCAAA,sJACAA,mCAAA,qBAAK7I,UAAU,uBACb6I,mCAAA,qBAAK7I,UAAU,sBACb6I,mCAAA,qBAAK7I,UAAU,sBAAsBc,KAAKS,MAAM4G,YAChDU,mCAAA,qBAAK7I,UAAU,kBAAf,KAAmCc,KAAKS,MAAMJ,SAGhD0H,mCAAA,qBAAK7I,UAAU,+BACb6I,mCAAA,qBAAK7I,UAAU,2BACb6I,mCAAA,wBAAQ7I,UAAU,SAASwE,QAAS1D,KAAK2H,gBAAgB,MAAzD,KAGAI,mCAAA,wBAAQ7I,UAAU,SAASwE,QAAS1D,KAAK2H,gBAAgB,MAAzD,MAKFI,mCAAA,qBAAK7I,UAAU,2BACb6I,mCAAA,wBAAQ7I,UAAU,SAASwE,QAAS1D,KAAK2H,gBAAgB,MAAzD,KAGAI,mCAAA,wBAAQ7I,UAAU,SAASwE,QAAS1D,KAAK2H,gBAAgB,MAAzD,MAKFI,mCAAA,qBAAK7I,UAAU,2BACb6I,mCAAA,wBAAQ7I,UAAU,SAASwE,QAAS1D,KAAKoH,iBAAzC,0DAGAW,mCAAA,wBAAQ7I,UAAU,SAASwE,QAAS1D,KAAK8H,iBAAzC,uDAONC,mCAAA,uBAAOhF,QAAQ,UACZ,IADH,mPAEgD,KAEhDgF,mCAAA,uBACEtI,GAAG,SACHP,UAAU,kBACV8D,KAAK,MACLL,YAAY,yEAtHApD,8CA6HP4F,kDCtIfsB,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.caa7b0ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Greetings.css';\r\nimport boyPic from '../assets/boy.png';\r\n\r\nclass Greetings extends Component<any> {\r\n  render() {\r\n    return (\r\n      <main className=\"Greetings\">\r\n        <img src={boyPic} alt=\"boy\" width=\"150\" />\r\n        <p className=\"Greetings--text\">\r\n          Добро пожаловать! <br />\r\n          Предлагаем тебе пройти тест \"Твоя роль в РЦР\". Этот тест поможет\r\n          определить твою характерную предрасположенность к одной из\r\n          профессиональных ролей в РЦР \"Екатеринбург\" Внимательно прочитай\r\n          задания и впиши свой вариант ответа в графу \"Ответ\" и нажми \"Далее\"\r\n        </p>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Greetings;\r\n","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './Algorithm.css';\r\n\r\ninterface dragItem {\r\n  id: string;\r\n  content: string;\r\n}\r\n\r\ninterface IAlgorithmState {\r\n  items: dragItem[];\r\n}\r\n\r\nfunction shuffle(array: dragItem[]) {\r\n  let currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex;\r\n\r\n  while (0 !== currentIndex) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nconst data = [\r\n  {\r\n    id: '1',\r\n    content: 'function binarySearch(value, array[])'\r\n  },\r\n  {\r\n    id: '2',\r\n    content: `start <- 0; stop <- list.len - 1; `\r\n  },\r\n  {\r\n    id: '3',\r\n    content: 'while (start <= stop)'\r\n  },\r\n  {\r\n    id: '4',\r\n    content: 'if (value = list[middle]'\r\n  },\r\n  {\r\n    id: '5',\r\n    content: 'return middle'\r\n  },\r\n  {\r\n    id: '6',\r\n    content: 'else if(value < list[middle])'\r\n  },\r\n  {\r\n    id: '7',\r\n    content: 'stop <- middle - 1'\r\n  },\r\n  {\r\n    id: '8',\r\n    content: 'middle <- (start + stop) / 2'\r\n  },\r\n  {\r\n    id: '9',\r\n    content: 'else return start <- middle + 1'\r\n  },\r\n  {\r\n    id: '10',\r\n    content: 'return -1'\r\n  }\r\n];\r\n\r\nclass Algorithm extends Component<any, IAlgorithmState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      items: shuffle(data)\r\n    };\r\n  }\r\n\r\n  onDragEnd = (result: any) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = this.reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items\r\n    });\r\n  };\r\n\r\n  reorder = (\r\n    list: dragItem[],\r\n    startIndex: number,\r\n    endIndex: number\r\n  ): dragItem[] => {\r\n    const result: dragItem[] = list;\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Algorithm\">\r\n        <p className=\"Algorithm--text\">\r\n          Расположите строки так, чтобы из этого получился алгоритм бинарного\r\n          поиска\r\n        </p>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"droppable\">\r\n            {(provided, snapshot) => (\r\n              <div ref={provided.innerRef} className=\"Algorithm--dropZone\">\r\n                {this.state.items.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        className=\"Algorithm--dragItem\"\r\n                      >\r\n                        {item.content}\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Algorithm;\r\n","import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport './EmailForm.css';\r\nimport listPic from '../assets/list.png';\r\n\r\nclass EmailForm extends Component<any> {\r\n  render() {\r\n    return (\r\n      <div className=\"EmailForm\">\r\n        <img className=\"EmailForm--img\" src={listPic} alt=\"list\" />\r\n\r\n        <p>\r\n          Введите регистрационные данные<br />\r\n        </p>\r\n\r\n        <div className=\"EmailForm--container\">\r\n          <form className=\"EmailForm--form\">\r\n            <label htmlFor=\"FIO\">ФИО:</label>\r\n            <input id=\"FIO\" type=\"text\" />\r\n            <label htmlFor=\"email\">E-mail(*):</label>\r\n            <input id=\"email\" type=\"email\" required={true} />\r\n            <label htmlFor=\"tel\">Телефон:</label>\r\n            <input id=\"tel\" type=\"tel\" />\r\n          </form>\r\n          <img className=\"EmailForm--img__landscape\" src={listPic} alt=\"list\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmailForm;\r\n","import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport chain from '../assets/chain.png';\r\nimport './Analitic.css';\r\n\r\ninterface IAnaliticState {\r\n  choosenName: string;\r\n  choosenProf: string;\r\n}\r\n\r\nclass Analitic extends Component<any, IAnaliticState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      choosenName: '',\r\n      choosenProf: ''\r\n    };\r\n  }\r\n\r\n  chooseName = (value: string) => (e: any) => {\r\n    this.setState({\r\n      choosenName: value\r\n    });\r\n  };\r\n\r\n  chooseProf = (value: string) => (e: any) => {\r\n    this.setState({\r\n      choosenProf: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Analitic\">\r\n        <div className=\"Analitic--task\">\r\n          <img src={chain} alt=\"chain\" className=\"Analitic--pic\" />\r\n          <p className=\"Analitic--text\">\r\n            По подозрению в убийстве Жоржа задержали Олега, Павла и Андрея. Из\r\n            них один врач, другой продавец, третий бухгалтер. <br />В ходе\r\n            следствия выяснили, что продавец всегда лжет, бухгалтер всегда\r\n            говорит правду, а врач лжет через раз. Их утверждения: <br />\r\n            Олег: \"Я убил Жоржа, Павлик не виноват!\" <br />\r\n            Павел: \"Олег никого не убивал. Убийца Андрей!\" <br />\r\n            Андрей \"Я не виновен. Преступник - Олег!\" <br />\r\n            Кто убил Жоржа и какая у него профессия?\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"Analitic--buttonContainer__landscape\">\r\n          <div className=\"buttonContainer--column__label\">\r\n            <div className=\"column--label\">Имя:</div>\r\n            <div className=\"column--label\">Профессия:</div>\r\n          </div>\r\n\r\n          <div className=\"buttonContainer--column\">\r\n            <button className=\"button\" onClick={this.chooseName('Андрей')}>\r\n              Андрей\r\n            </button>\r\n            <button className=\"button\" onClick={this.chooseProf('Врач')}>\r\n              Врач\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"buttonContainer--column\">\r\n            <button className=\"button\" onClick={this.chooseName('Павел')}>\r\n              Павел\r\n            </button>\r\n            <button className=\"button\" onClick={this.chooseProf('Продавец')}>\r\n              Продавец\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"buttonContainer--column\">\r\n            <button className=\"button\" onClick={this.chooseName('Олег')}>\r\n              Олег\r\n            </button>\r\n            <button className=\"button\" onClick={this.chooseProf('Бухгалтер')}>\r\n              Бухгалтер\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Analitic--buttonContainer\">\r\n          <div className=\"column--label\">Имя:</div>\r\n\r\n          <div className=\"buttonContainer--row\">\r\n            <button className=\"button\" onClick={this.chooseName('Андрей')}>\r\n              Андрей\r\n            </button>\r\n            <button className=\"button\" onClick={this.chooseName('Павел')}>\r\n              Павел\r\n            </button>\r\n            <button className=\"button\" onClick={this.chooseName('Олег')}>\r\n              Олег\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"column--label\">Профессия:</div>\r\n          <div className=\"buttonContainer--row\">\r\n            <button className=\"button\" onClick={this.chooseProf('Врач')}>\r\n              Врач\r\n            </button>\r\n\r\n            <button className=\"button\" onClick={this.chooseProf('Продавец')}>\r\n              Продавец\r\n            </button>\r\n\r\n            <button className=\"button\" onClick={this.chooseProf('Бухгалтер')}>\r\n              Бухгалтер\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Analitic--answer\">\r\n          Ваш выбор: {this.state.choosenName} {this.state.choosenProf}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analitic;\r\n","import React, { Component } from 'react';\r\nimport './YouWant.css';\r\nimport lamp from '../assets/lamp.png';\r\n\r\ninterface IYouWantState {\r\n  choosenProf: string;\r\n}\r\nclass YouWant extends Component<any, IYouWantState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      choosenProf: ''\r\n    };\r\n  }\r\n\r\n  chooseProf = (e: any) => {\r\n    const choosenProf = e.target.textContent;\r\n    const profButtons = this.getAllButton();\r\n    for (let i = 0; i < profButtons.length; i++) {\r\n      if (profButtons[i].classList.contains('button__selected')) {\r\n        profButtons[i].classList.remove('button__selected');\r\n      }\r\n    }\r\n    e.target.className += ' button__selected';\r\n    this.setState({\r\n      choosenProf: choosenProf\r\n    });\r\n  };\r\n\r\n  getAllButton = () => {\r\n    let buttons: HTMLCollection = document.getElementsByClassName('profbutton');\r\n    return buttons;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"YouWant\">\r\n        <p>Кем ты хочешь быть?</p>\r\n        <div className=\"YouWant--choose\">\r\n          <div className=\"choose--column\">\r\n            <button className=\"button profbutton\" onClick={this.chooseProf}>\r\n              Аналитик\r\n            </button>\r\n            <button className=\"button profbutton\" onClick={this.chooseProf}>\r\n              Разработчик\r\n            </button>\r\n          </div>\r\n\r\n          <img className=\"YouWant--pic\" src={lamp} alt=\"lamp\" />\r\n\r\n          <div className=\"choose--column\">\r\n            <button className=\"button profbutton\" onClick={this.chooseProf}>\r\n              Тестировщик\r\n            </button>\r\n            <button className=\"button profbutton\" onClick={this.chooseProf}>\r\n              Архитектор\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default YouWant;\r\n","import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport './Leave.css';\r\nimport crown from '../assets/crown.png';\r\n\r\ninterface ILeaveState {\r\n  position: string;\r\n}\r\n\r\nclass Leave extends Component<any, ILeaveState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      position: 'Аналитик'\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Leave\">\r\n        <p>\r\n          Поздравляем! В результате тестирования ты проявил себя как{' '}\r\n          {this.state.position} <br />\r\n          Мы ждем твое резюме по адресу:{' '}\r\n          <a href=\"mailto:65rcr_resume@cbr.ru\">65rcr_resume@cbr.ru</a>\r\n        </p>\r\n        <img className=\"Leave--pic\" src={crown} alt=\"crown\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leave;\r\n","import React, { Component } from 'react';\r\nimport logo from './assets/logo.svg';\r\nimport './App.css';\r\nimport './component/Greetings';\r\nimport Greetings from './component/Greetings';\r\nimport Algorithm from './component/Algorithm';\r\nimport EmailForm from './component/EmailForm';\r\nimport Testing from './component/Testing';\r\nimport Analitic from './component/Analitic';\r\nimport YouWant from './component/YouWant';\r\nimport Leave from './component/Leave';\r\n\r\ninterface IAppState {\r\n  questionNumber: number;\r\n}\r\n\r\nclass App extends Component<any, IAppState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      questionNumber: 5\r\n    };\r\n  }\r\n\r\n  public nextPage = (e: any): void => {\r\n    if (this.state.questionNumber < 6) {\r\n      this.setState(state => {\r\n        return {\r\n          questionNumber: state.questionNumber + 1\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  public prevPage = (e: any): void => {\r\n    if (this.state.questionNumber > 0) {\r\n      this.setState(state => {\r\n        return {\r\n          questionNumber: state.questionNumber - 1\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  public mainPage = (): JSX.Element => {\r\n    switch (this.state.questionNumber) {\r\n      case 0: {\r\n        return <Greetings />;\r\n      }\r\n\r\n      case 1: {\r\n        return <EmailForm />;\r\n      }\r\n\r\n      case 2: {\r\n        return <Algorithm />;\r\n      }\r\n\r\n      case 3: {\r\n        return <Testing />;\r\n      }\r\n\r\n      case 4: {\r\n        return <Analitic />;\r\n      }\r\n\r\n      case 5: {\r\n        return <YouWant />;\r\n      }\r\n\r\n      case 6: {\r\n        return <Leave />;\r\n      }\r\n\r\n      default: {\r\n        return <span>Error</span>;\r\n      }\r\n    }\r\n  };\r\n\r\n  public footerPage = (): JSX.Element => {\r\n    switch (this.state.questionNumber) {\r\n      case 0: {\r\n        return (\r\n          <button className=\"button\" onClick={this.nextPage}>\r\n            Начать тестирование\r\n          </button>\r\n        );\r\n      }\r\n      case 1: {\r\n        return (\r\n          <div>\r\n            <button className=\"button\" onClick={this.prevPage}>\r\n              Назад\r\n            </button>\r\n            <button className=\"button\" onClick={this.nextPage}>\r\n              Далее\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n      case 2: {\r\n        return (\r\n          <div>\r\n            <button className=\"button\" onClick={this.prevPage}>\r\n              Назад\r\n            </button>\r\n            <button className=\"button\" onClick={this.nextPage}>\r\n              Далее\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n      case 3: {\r\n        return (\r\n          <div>\r\n            <button className=\"button\" onClick={this.prevPage}>\r\n              Назад\r\n            </button>\r\n            <button className=\"button\" onClick={this.nextPage}>\r\n              Далее\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      case 4: {\r\n        return (\r\n          <div>\r\n            <button className=\"button\" onClick={this.prevPage}>\r\n              Назад\r\n            </button>\r\n            <button className=\"button\" onClick={this.nextPage}>\r\n              Далее\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      case 5: {\r\n        return (\r\n          <div>\r\n            <button className=\"button\" onClick={this.prevPage}>\r\n              Назад\r\n            </button>\r\n            <button className=\"button\" onClick={this.nextPage}>\r\n              Далее\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      case 6: {\r\n        return <></>;\r\n      }\r\n\r\n      default: {\r\n        return <span>Error</span>;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"appHeader\">\r\n          <img className=\"appHeader--logo\" src={logo} />\r\n        </header>\r\n        <main className=\"appMain\">{this.mainPage()}</main>\r\n        <footer className=\"appFooter\">{this.footerPage()}</footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/list.33a893bd.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.29cc4c92.svg\";","module.exports = __webpack_public_path__ + \"static/media/boy.87d90a27.png\";","import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport './Testing.css';\r\n\r\ninterface ITestingState {\r\n  expression: string;\r\n  result: number | string;\r\n}\r\n\r\nclass Testing extends Component<any, ITestingState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      expression: '',\r\n      result: 0\r\n    };\r\n  }\r\n\r\n  checkEnd = (values: string) => {\r\n    let newValues;\r\n    if (\r\n      values[values.length - 1] === '+' ||\r\n      values[values.length - 1] === '-'\r\n    ) {\r\n      values = values.slice(0, -1);\r\n      this.checkEnd(values);\r\n    } else {\r\n      newValues = values;\r\n    }\r\n    return newValues ? newValues : '0';\r\n  };\r\n\r\n  calculateResult = () => {\r\n    let result: number = 0;\r\n    let values = this.state.expression\r\n      .replace(/[^-()\\d/*+.]/g, '')\r\n      .replace(/-{2,}/g, '+')\r\n      .replace(/\\+{2,}/g, '+')\r\n      .replace(/\\+-/g, '+') // тут ошибка, должен быть -\r\n      .replace(/-\\+/g, '-');\r\n\r\n    values = this.checkEnd(values);\r\n    console.log(values);\r\n    try {\r\n      result = eval(values);\r\n    } catch {\r\n      this.setState({\r\n        result: 'NaN'\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      result: result\r\n    });\r\n  };\r\n\r\n  addToExpression = (value: string) => (\r\n    e: React.SyntheticEvent<EventTarget>\r\n  ) => {\r\n    if (!(e.target instanceof HTMLButtonElement)) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.expression.length <= 15) {\r\n      this.setState(state => {\r\n        return {\r\n          expression: state.expression.concat(value)\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  clearExpression = () => {\r\n    this.setState({\r\n      expression: '',\r\n      result: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Testing\">\r\n        <p>Найдите баг в программе</p>\r\n        <div className=\"Testing--calculator\">\r\n          <div className=\"calculator--result\">\r\n            <div className=\"result--expression\">{this.state.expression}</div>\r\n            <div className=\"result--answer\">= {this.state.result}</div>\r\n          </div>\r\n\r\n          <div className=\"calculator--buttonContainer\">\r\n            <div className=\"buttonContainer--column\">\r\n              <button className=\"button\" onClick={this.addToExpression('3')}>\r\n                3\r\n              </button>\r\n              <button className=\"button\" onClick={this.addToExpression('2')}>\r\n                2\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"buttonContainer--column\">\r\n              <button className=\"button\" onClick={this.addToExpression('+')}>\r\n                +\r\n              </button>\r\n              <button className=\"button\" onClick={this.addToExpression('-')}>\r\n                -\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"buttonContainer--column\">\r\n              <button className=\"button\" onClick={this.calculateResult}>\r\n                Посчитать\r\n              </button>\r\n              <button className=\"button\" onClick={this.clearExpression}>\r\n                Очистить\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <label htmlFor=\"answer\">\r\n          {' '}\r\n          Напишите выражение, которое приводит к ошибке{' '}\r\n        </label>\r\n        <input\r\n          id=\"answer\"\r\n          className=\"Testing--answer\"\r\n          type=\"tel\"\r\n          placeholder=\"Выражение\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Testing;\r\n","module.exports = __webpack_public_path__ + \"static/media/chain.c4be761a.png\";","module.exports = __webpack_public_path__ + \"static/media/lamp.5f93da4f.png\";","module.exports = __webpack_public_path__ + \"static/media/crown.deac9e75.png\";"],"sourceRoot":""}